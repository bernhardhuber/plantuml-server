## Class diagram ##
###################

@startuml
hide empty members
hide empty methods
hide empty fields
abstract class UmlDiagramService {
  public void doGet(HttpServletRequest rq, HttpServletResponse rsp)
  abstract public String getSource( String uri)
  abstract FileFormat getOutputFormat()
}
class DiagramResponse {
  DiagramResponse( HttpServletResponse r, FileFormat f)
  void sendDiagram( String uml)
  void sendMap( String uml)
}

abstract class HttpServlet
abstract class HttpServlet
abstract class HttpServlet

HttpServlet <|-- UmlDiagramService
HttpServlet <|-- CheckSyntaxServlet
HttpServlet <|-- MapServlet
HttpServlet <|-- LanguageServlet
HttpServlet <|-- PlantUmlServlet
HttpServlet <|-- ProxyServlet
HttpServlet <|-- Welcome

UmlDiagramService <|-- AsciiServlet
UmlDiagramService <|-- Base64Servlet
UmlDiagramService <|-- EpsServlet
UmlDiagramService <|-- EpsTextServlet
UmlDiagramService <|-- ImgServlet
UmlDiagramService <|-- SvgServlet
UmlDiagramService o- DiagramResponse

CheckSyntaxServlet o-- DiagramResponse
MapServlet o-- DiagramResponse
ProxyServlet o-- DiagramResponse
@enduml

## Sequence diagram ##
######################

@startuml
title Generation of a PNG image illustrated

ImgServlet -> ImgServlet : getSource()
ImgServlet -> UmlExtractor : getUmlSource()
UmlExtractor --> ImgServlet
ImgServlet -> ImgServlet : getOutputFormat()
ImgServlet -> DiagramResponse : <<create>>
ImgServlet -> DiagramResponse : sendDiagram()

participant "PlantUML library" as Lib #99FF99

DiagramResponse -> Lib : generateImage()
Lib --> DiagramResponse
DiagramResponse --> ImgServlet
@enduml
